# Test Environment Configuration
# Copy this file to .env.test and update with your test database settings
# These settings will be used when running tests (NODE_ENV=test)

# Test Database Configuration
POSTGRES_HOST=localhost
POSTGRES_PORT=5432
POSTGRES_DB_TEST=trivia_game_test
POSTGRES_USER=postgres
POSTGRES_PASSWORD=

# Alternative: Use a test-specific connection string
# DATABASE_URL=postgresql://postgres:password@localhost:5432/trivia_game_test

# Notes:
# - Tests will create/use the database specified in POSTGRES_DB_TEST
# - Make sure your PostgreSQL user has CREATE DATABASE privileges
# - Run the setup script: cd src/__tests__ && ./setup-test-db.sh

# Prerequisites:
# - Run `npm install` to install all testing dependencies
# - Jest and TypeScript testing tools are automatically installed from package.json
# - Jest configuration is in jest.config.js and jest.setup.js

# Cross-Environment Compatibility Notes:
# - Different servers may have different PostgreSQL usernames (update POSTGRES_USER)
# - Some environments may require passwords (update POSTGRES_PASSWORD)
# - Cloud/remote databases may require SSL connections (uncomment DATABASE_URL if needed)
# - Ensure PostgreSQL version compatibility (tested with PostgreSQL 12+)
# - Node.js version should be 16+ for best compatibility
